{"ast":null,"code":"import { initializeApp } from 'firebase/app'; // creates an App instance based on some config \nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDhmPKhg8X1P1QrjZ3AQOsqTNe_pVvYols\",\n  authDomain: \"shopping-store-fc3eb.firebaseapp.com\",\n  projectId: \"shopping-store-fc3eb\",\n  storageBucket: \"shopping-store-fc3eb.appspot.com\",\n  messagingSenderId: \"660017653676\",\n  appId: \"1:660017653676:web:8d08dc3b5a1709b782bc09\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\" // always force user to select an account \n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore(); // allows to access database\n\nexport const createUserDocumentFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createAt\n      });\n    } catch (err) {\n      console.log('error creating the user', err);\n    }\n  }\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async () => {};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","userSnapshot","exists","displayName","email","createAt","Date","err","console","log","createAuthUserWithEmailAndPassword"],"sources":["C:/Users/filip/ZTM/React/shopping-store/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app'; // creates an App instance based on some config \r\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDhmPKhg8X1P1QrjZ3AQOsqTNe_pVvYols\",\r\n  authDomain: \"shopping-store-fc3eb.firebaseapp.com\",\r\n  projectId: \"shopping-store-fc3eb\",\r\n  storageBucket: \"shopping-store-fc3eb.appspot.com\",\r\n  messagingSenderId: \"660017653676\",\r\n  appId: \"1:660017653676:web:8d08dc3b5a1709b782bc09\"\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\n\r\ngoogleProvider.setCustomParameters({\r\n  prompt: \"select_account\" // always force user to select an account \r\n});\r\n\r\nexport const auth = getAuth();\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\r\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\r\n\r\nexport const db = getFirestore(); // allows to access database\r\n\r\nexport const createUserDocumentFromAuth = async (userAuth) => {\r\n  const userDocRef = doc(db, 'users', userAuth.uid);\r\n  const userSnapshot = await getDoc(userDocRef);\r\n\r\n  if(!userSnapshot.exists()){\r\n    const { displayName, email } = userAuth;\r\n    const createAt = new Date();\r\n\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createAt\r\n      });\r\n    } catch (err){\r\n      console.log('error creating the user', err);\r\n    }\r\n  }\r\n  \r\n  return userDocRef;\r\n}\r\n\r\nexport const createAuthUserWithEmailAndPassword = async () => {\r\n\r\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc,CAAC,CAAC;AAC9C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,8BAA8B,QAAQ,eAAe;AAChI,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AAEtE,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,sCAAsC;EAClDC,SAAS,EAAE,sBAAsB;EACjCC,aAAa,EAAE,kCAAkC;EACjDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGjB,aAAa,CAACU,cAAc,CAAC;AAEjD,MAAMQ,cAAc,GAAG,IAAId,kBAAkB,CAAC,CAAC;AAE/Cc,cAAc,CAACC,mBAAmB,CAAC;EACjCC,MAAM,EAAE,gBAAgB,CAAC;AAC3B,CAAC,CAAC;;AAEF,OAAO,MAAMC,IAAI,GAAGpB,OAAO,CAAC,CAAC;AAC7B,OAAO,MAAMqB,qBAAqB,GAAGA,CAAA,KAAMnB,eAAe,CAACkB,IAAI,EAAEH,cAAc,CAAC;AAChF,OAAO,MAAMK,wBAAwB,GAAGA,CAAA,KAAMrB,kBAAkB,CAACmB,IAAI,EAAEH,cAAc,CAAC;AAEtF,OAAO,MAAMM,EAAE,GAAGlB,YAAY,CAAC,CAAC,CAAC,CAAC;;AAElC,OAAO,MAAMmB,0BAA0B,GAAG,MAAOC,QAAQ,IAAK;EAC5D,MAAMC,UAAU,GAAGpB,GAAG,CAACiB,EAAE,EAAE,OAAO,EAAEE,QAAQ,CAACE,GAAG,CAAC;EACjD,MAAMC,YAAY,GAAG,MAAMrB,MAAM,CAACmB,UAAU,CAAC;EAE7C,IAAG,CAACE,YAAY,CAACC,MAAM,CAAC,CAAC,EAAC;IACxB,MAAM;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAAGN,QAAQ;IACvC,MAAMO,QAAQ,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE3B,IAAI;MACF,MAAMzB,MAAM,CAACkB,UAAU,EAAE;QACvBI,WAAW;QACXC,KAAK;QACLC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOE,GAAG,EAAC;MACXC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC7C;EACF;EAEA,OAAOR,UAAU;AACnB,CAAC;AAED,OAAO,MAAMW,kCAAkC,GAAG,MAAAA,CAAA,KAAY,CAE9D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}