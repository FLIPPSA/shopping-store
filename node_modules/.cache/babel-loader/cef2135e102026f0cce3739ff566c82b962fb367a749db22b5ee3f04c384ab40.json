{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\filip\\\\ZTM\\\\React\\\\shopping-store\\\\src\\\\contexts\\\\user.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { onAuthStateChangeListener, signOutUser } from \"../utils/firebase/firebase.utils\";\n\n// as the actual value you want to access \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => null\n});\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  // This Provider allows any of its child components to access the values inside of its useState\n  const [currentUser, setCurrentUser] = useState(null);\n  const value = {\n    currentUser,\n    setCurrentUser\n  };\n  signOutUser(); // when UserProvider mounts -> signOut user no matter what \n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangeListener(user => {\n      // The moment that this listener mounts it checks the authentication state automatically\n      console.log(user);\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_s(UserProvider, \"Xrg8L3Z651aY+Exm6/2TIpZTV/c=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","onAuthStateChangeListener","signOutUser","jsxDEV","_jsxDEV","UserContext","currentUser","setCurrentUser","UserProvider","children","_s","value","unsubscribe","user","console","log","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/filip/ZTM/React/shopping-store/src/contexts/user.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport { onAuthStateChangeListener, signOutUser } from \"../utils/firebase/firebase.utils\";\r\n\r\n// as the actual value you want to access \r\nexport const UserContext = createContext({\r\n  currentUser: null,\r\n  setCurrentUser: () => null\r\n});\r\n\r\nexport const UserProvider = ({ children }) => { // This Provider allows any of its child components to access the values inside of its useState\r\n  const [ currentUser, setCurrentUser ] = useState(null);\r\n  const value = { currentUser, setCurrentUser };\r\n\r\n  signOutUser(); // when UserProvider mounts -> signOut user no matter what \r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChangeListener((user) => { // The moment that this listener mounts it checks the authentication state automatically\r\n      console.log(user);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  return <UserContext.Provider value={value}>{ children }</UserContext.Provider>\r\n};"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,yBAAyB,EAAEC,WAAW,QAAQ,kCAAkC;;AAEzF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC;EACvCQ,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAEA,CAAA,KAAM;AACxB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAAE;EAC9C,MAAM,CAAEJ,WAAW,EAAEC,cAAc,CAAE,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMY,KAAK,GAAG;IAAEL,WAAW;IAAEC;EAAe,CAAC;EAE7CL,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEfF,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAGX,yBAAyB,CAAEY,IAAI,IAAK;MAAE;MACxDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;IACF,OAAOD,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOR,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACL,KAAK,EAAEA,KAAM;IAAAF,QAAA,EAAGA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AAChF,CAAC;AAACV,EAAA,CAdWF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}